From b8c109873a8604d46ea0e90af2d938f966db7cfc Mon Sep 17 00:00:00 2001
From: Andrew Reynolds <andrew.j.reynolds@gmail.com>
Date: Sat, 23 Nov 2024 15:46:52 -0600
Subject: [PATCH 200/312] Fix lexer for symbols starting with ! (#11341)

Lexer spuriously prevented symbols with prefix `!`.
---
 src/parser/smt2/smt2_lexer.cpp                 | 7 ++++++-
 test/regress/cli/CMakeLists.txt                | 1 +
 test/regress/cli/regress0/parser/bang-lex.smt2 | 6 ++++++
 3 files changed, 13 insertions(+), 1 deletion(-)
 create mode 100644 test/regress/cli/regress0/parser/bang-lex.smt2

diff --git a/src/parser/smt2/smt2_lexer.cpp b/src/parser/smt2/smt2_lexer.cpp
index 27a72988f..1a9b8841a 100644
--- a/src/parser/smt2/smt2_lexer.cpp
+++ b/src/parser/smt2/smt2_lexer.cpp
@@ -122,7 +122,6 @@ Token Smt2Lexer::computeNextToken()
   pushToToken(ch);
   switch (ch)
   {
-    case '!': return Token::ATTRIBUTE_TOK;
     case '(': return Token::LPAREN_TOK;
     case ')': return Token::RPAREN_TOK;
     case '|':
@@ -321,6 +320,12 @@ Token Smt2Lexer::tokenizeCurrentSymbol() const
   Assert(!d_token.empty());
   switch (d_token[0])
   {
+    case '!':
+      if (d_token.size() == 1)
+      {
+        return Token::ATTRIBUTE_TOK;
+      }
+      break;
     case 'a':
       if (d_token.size() == 2 && d_token[1] == 's')
       {
diff --git a/test/regress/cli/CMakeLists.txt b/test/regress/cli/CMakeLists.txt
index 138fe26b3..efa06409e 100644
--- a/test/regress/cli/CMakeLists.txt
+++ b/test/regress/cli/CMakeLists.txt
@@ -1151,6 +1151,7 @@ set(regress_0_tests
   regress0/options/version.smt2
   regress0/parallel-let.smt2
   regress0/parser/as.smt2
+  regress0/parser/bang-lex.smt2
   regress0/parser/bv_arity_smt2.6.smt2
   regress0/parser/bv_nat.smt2
   regress0/parser/constraint.smt2
diff --git a/test/regress/cli/regress0/parser/bang-lex.smt2 b/test/regress/cli/regress0/parser/bang-lex.smt2
new file mode 100644
index 000000000..58eb6fde7
--- /dev/null
+++ b/test/regress/cli/regress0/parser/bang-lex.smt2
@@ -0,0 +1,6 @@
+; EXPECT: unsat
+(set-logic ALL)
+(declare-fun !x () Int)
+(assert (> !x 0))
+(assert (< !x 0))
+(check-sat)
-- 
2.47.1

