From af60e1c58ebf1820c58aafac3ab1e7705958f062 Mon Sep 17 00:00:00 2001
From: Mathias Preiner <mathias.preiner@gmail.com>
Date: Fri, 4 Oct 2024 10:32:23 -0700
Subject: [PATCH 110/312] cadical: Properly disable obsolete activation
 literals. (#11263)

Co-authored-by: Aina Niemetz <aina.niemetz@gmail.com>
---
 src/prop/cadical.cpp | 23 ++++++++++++++++++-----
 1 file changed, 18 insertions(+), 5 deletions(-)

diff --git a/src/prop/cadical.cpp b/src/prop/cadical.cpp
index 9bda8a6c8..401b428ed 100644
--- a/src/prop/cadical.cpp
+++ b/src/prop/cadical.cpp
@@ -654,16 +654,25 @@ class CadicalPropagator : public CaDiCaL::ExternalPropagator
   /**
    * Push user assertion level.
    */
-  void user_push(SatVariable& alit)
+  void user_push()
   {
     Trace("cadical::propagator")
         << "user push: " << d_active_vars_control.size();
     d_active_vars_control.push_back(d_active_vars.size());
     Trace("cadical::propagator")
         << " -> " << d_active_vars_control.size() << std::endl;
+  }
+
+  /**
+   * Set the activation literal for the current user assertion level.
+   *
+   * @param alit The activation literal for the current user assertion level.
+   */
+  void set_activation_lit(SatVariable& alit)
+  {
     d_activation_literals.push_back(alit);
     Trace("cadical::propagator")
-        << "enable activation lit: " << alit << std::endl;
+      << "enable activation lit: " << alit << std::endl;
   }
 
   /**
@@ -786,7 +795,7 @@ class CadicalPropagator : public CaDiCaL::ExternalPropagator
   }
 
   /** Return the current user (assertion) level. */
-  size_t current_user_level() { return d_activation_literals.size(); }
+  size_t current_user_level() const { return d_active_vars_control.size(); }
 
   /** Return the current list of activation literals. */
   const std::vector<SatLiteral>& activation_literals()
@@ -1242,9 +1251,13 @@ void CadicalSolver::initialize(context::Context* context,
 void CadicalSolver::push()
 {
   d_context->push();  // SAT context for cvc5
-  // New activation literal for pushed user level.
+  // Push new user level
+  d_propagator->user_push();
+  // Set new activation literal for pushed user level
+  // Note: This happens after the push to ensure that the activation literal's
+  // introduction level is the current user level.
   SatVariable alit = newVar(false);
-  d_propagator->user_push(alit);
+  d_propagator->set_activation_lit(alit);
 }
 
 void CadicalSolver::pop()
-- 
2.47.1

