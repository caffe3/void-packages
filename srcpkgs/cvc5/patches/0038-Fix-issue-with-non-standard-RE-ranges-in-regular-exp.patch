From ee56b1f208c89fe041686c17fcff792abe191c32 Mon Sep 17 00:00:00 2001
From: Andrew Reynolds <andrew.j.reynolds@gmail.com>
Date: Fri, 23 Aug 2024 15:02:29 -0500
Subject: [PATCH 038/312] Fix issue with non-standard RE ranges in regular
 expression consume (#11174)

This bug accidentally reverses the contents of a regular expression
concatentation in certain range cases, which would lead to unsoundess if
we supported non-standard RE ranges.

This bug was introduced in the refactor here:
https://github.com/cvc5/cvc5/commit/20ffeae01dc565547015590e06efc4db0092734f,
which made the rewriter call the re consume utility in a new way is
sensitive to the order of the vector.

Fixes https://github.com/cvc5/cvc5/issues/11168.
---
 src/theory/strings/regexp_entail.cpp              | 2 +-
 test/regress/cli/CMakeLists.txt                   | 1 +
 test/regress/cli/regress0/strings/issue11168.smt2 | 7 +++++++
 3 files changed, 9 insertions(+), 1 deletion(-)
 create mode 100644 test/regress/cli/regress0/strings/issue11168.smt2

diff --git a/src/theory/strings/regexp_entail.cpp b/src/theory/strings/regexp_entail.cpp
index 9b919645d..12c7ff675 100644
--- a/src/theory/strings/regexp_entail.cpp
+++ b/src/theory/strings/regexp_entail.cpp
@@ -159,7 +159,7 @@ Node RegExpEntail::simpleRegexpConsume(std::vector<Node>& mchildren,
             if (!isConstRegExp(rc))
             {
               // if a non-standard re.range term, abort
-              return Node::null();
+              break;
             }
             std::vector<unsigned> ssVec;
             ssVec.push_back(t == 0 ? s.back() : s.front());
diff --git a/test/regress/cli/CMakeLists.txt b/test/regress/cli/CMakeLists.txt
index d3c412970..53c7547f0 100644
--- a/test/regress/cli/CMakeLists.txt
+++ b/test/regress/cli/CMakeLists.txt
@@ -1788,6 +1788,7 @@ set(regress_0_tests
   regress0/strings/instance13131.smt2
   regress0/strings/instance15449.smt2
   regress0/strings/is_digit_simple.smt2
+  regress0/strings/issue11168.smt2
   regress0/strings/issue1189.smt2
   regress0/strings/issue2958.smt2
   regress0/strings/issue3440.smt2
diff --git a/test/regress/cli/regress0/strings/issue11168.smt2 b/test/regress/cli/regress0/strings/issue11168.smt2
new file mode 100644
index 000000000..8b6b54199
--- /dev/null
+++ b/test/regress/cli/regress0/strings/issue11168.smt2
@@ -0,0 +1,7 @@
+; EXPECT: (error "expecting a constant string term in regexp range")
+; EXIT: 1
+(set-logic ALL)
+(declare-const a String)
+(declare-const b String)
+(assert (not (str.in_re "a" (re.+ (re.range a b))))) 
+(check-sat)
-- 
2.47.1

