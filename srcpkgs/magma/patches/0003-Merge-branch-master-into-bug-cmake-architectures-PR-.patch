From 9a416363ab31b9b3606d6e4f2513411651d3d22d Mon Sep 17 00:00:00 2001
From: Mark Gates <mgates3@icl.utk.edu>
Date: Tue, 16 Jul 2024 14:43:04 -0400
Subject: [PATCH 03/10] Merge branch 'master' into bug-cmake-architectures (PR
 #32)

---
 CMakeLists.txt | 30 +++++++++++++++++++-----------
 1 file changed, 19 insertions(+), 11 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 70da6c267..39177e5a9 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -128,18 +128,22 @@ if (MAGMA_ENABLE_CUDA)
     # sm_xx is binary, compute_xx is PTX for forward compatability
     # MIN_ARCH is lowest requested version
 
-    if(WIN32)
-        # Disable separable compilation on Windows because object linking list
-        # becomes too long when building multiple archs and MSVC throws errors
-        set(CUDA_SEPARABLE_COMPILATION OFF)
-    else()
-        set(CUDA_SEPARABLE_COMPILATION ON)
-    endif()
-
     set(__cuda_architectures)
 
     include_directories( ${CUDAToolkit_INCLUDE_DIRS} )
 
+    if (DEFINED CMAKE_CUDA_ARCHITECTURES AND DEFINED MAGMA_CUDA_ARCH_MIN)
+        # Allow more control over targeted CUDA archs by skipping name to
+        # number arch conversion below
+        set(MIN_ARCH "${MAGMA_CUDA_ARCH_MIN}")
+        set(GPU_TARGET "")
+        message( STATUS "    compile for CUDA ${CMAKE_CUDA_ARCHITECTURES}" )
+    else()
+        # Both must be set manually to skip logic below
+        unset(CMAKE_CUDA_ARCHITECTURES)
+        unset(MAGMA_CUDA_ARCH_MIN)
+    endif()
+
     if (GPU_TARGET MATCHES Fermi)
         set( GPU_TARGET "${GPU_TARGET} sm_20" )
     endif()
@@ -194,7 +198,9 @@ if (MAGMA_ENABLE_CUDA)
     endif()
 
     message( STATUS "CUDA_ARCHITECTURES ${__cuda_architectures}" )
-    set(CUDA_ARCHITECTURES "${__cuda_architectures}")
+    if (NOT DEFINED CMAKE_CUDA_ARCHITECTURES)
+        set(CMAKE_CUDA_ARCHITECTURES "${__cuda_architectures}")
+    endif()
     set( MIN_ARCH ${MIN_SM}0 )
 
     add_library(magma_nvcc_flags INTERFACE)
@@ -212,7 +218,9 @@ if (MAGMA_ENABLE_CUDA)
     endif()
 
     set(MAGMA_HAVE_CUDA "1")
-    set(MAGMA_CUDA_ARCH_MIN "${MIN_ARCH}")
+    if (NOT DEFINED MAGMA_CUDA_ARCH_MIN)
+        set(MAGMA_CUDA_ARCH_MIN "${MIN_ARCH}")
+    endif()
     message( STATUS "Define -DMAGMA_HAVE_CUDA -DMAGMA_CUDA_ARCH_MIN=${MIN_ARCH}" )
   else()
     message( STATUS "Could not find CUDA" )
@@ -713,7 +721,7 @@ message( STATUS "    CMAKE_INSTALL_PREFIX:  ${CMAKE_INSTALL_PREFIX}" )
 message( STATUS "    CFLAGS:                ${CMAKE_C_FLAGS}" )
 message( STATUS "    CXXFLAGS:              ${CMAKE_CXX_FLAGS}" )
 if (MAGMA_ENABLE_CUDA)
-  message( STATUS "    NVCCFLAGS:             ${CUDA_NVCC_FLAGS}" )
+  message( STATUS "    NVCCFLAGS:             ${CMAKE_CUDA_FLAGS}" )
 else()
   message( STATUS "    DEVCCFLAGS:            ${DEVCCFLAGS}" )
 endif()
-- 
2.47.1

