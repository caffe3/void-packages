From d4af40581aee1cecbb3d89d4acf81f4313a259ab Mon Sep 17 00:00:00 2001
From: Mark Gates <mgates3@icl.utk.edu>
Date: Mon, 15 Jul 2024 17:13:05 -0400
Subject: [PATCH 01/10] Merge branch 'master' into fix_sm_cmake

---
 CMakeLists.txt | 141 +++++++------------------------------------------
 1 file changed, 20 insertions(+), 121 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0c9b41c7d..61c5e0b79 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -172,131 +172,30 @@ if (MAGMA_ENABLE_CUDA)
         set( GPU_TARGET "${GPU_TARGET} sm_90" )
     endif()
 
-    if (GPU_TARGET MATCHES sm_20)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 200 )
+    # MIN_SM is lowest requested version
+    set( MIN_SM 99 )
+
+    string( REGEX MATCHALL "sm_[0-9][0-9]" sms "${GPU_TARGET}" )
+    list( SORT sms ) # To make output easier to reason about
+    foreach (sm IN LISTS sms)
+        string( REPLACE "sm_" "" sm "${sm}") # Remove sm_ prefix
+        if (sm LESS MIN_SM)
+            set( MIN_SM "${sm}" )
         endif()
-        list(APPEND __cuda_architectures 20)
-        message( STATUS "    compile for CUDA arch 2.0 (Fermi)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_30)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 300 )
-        endif()
-        list(APPEND __cuda_architectures 30)
-        message( STATUS "    compile for CUDA arch 3.0 (Kepler)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_35)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 300 )
-        endif()
-        list(APPEND __cuda_architectures 35)
-        message( STATUS "    compile for CUDA arch 3.5 (Kepler)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_37)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 300 )
-        endif()
-        list(APPEND __cuda_architectures 37)
-        message( STATUS "    compile for CUDA arch 3.7 (Kepler)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_50)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 500 )
-        endif()
-        list(APPEND __cuda_architectures 50)
-        message( STATUS "    compile for CUDA arch 5.0 (Maxwell)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_52)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 520 )
-        endif()
-        list(APPEND __cuda_architectures 52)
-        message( STATUS "    compile for CUDA arch 5.2 (Maxwell)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_53)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 530 )
-        endif()
-        list(APPEND __cuda_architectures 53)
-        message( STATUS "    compile for CUDA arch 5.3 (Maxwell)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_60)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 600 )
-        endif()
-        list(APPEND __cuda_architectures 60)
-        message( STATUS "    compile for CUDA arch 6.0 (Pascal)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_61)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 610 )
-        endif()
-        list(APPEND __cuda_architectures 61)
-        message( STATUS "    compile for CUDA arch 6.1 (Pascal)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_62)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 620 )
-        endif()
-        list(APPEND __cuda_architectures 62)
-        message( STATUS "    compile for CUDA arch 6.2 (Pascal)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_70)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 700 )
-        endif()
-        list(APPEND __cuda_architectures 70)
-        message( STATUS "    compile for CUDA arch 7.0 (Volta)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_71)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 710 )
-        endif()
-        list(APPEND __cuda_architectures 71)
-        message( STATUS "    compile for CUDA arch 7.1 (Volta)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_75)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 750 )
-        endif()
-        list(APPEND __cuda_architectures 75)
-        message( STATUS "    compile for CUDA arch 7.5 (Turing)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_80)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 800 )
-        endif()
-        list(APPEND __cuda_architectures 80)
-        message( STATUS "    compile for CUDA arch 8.0 (Ampere)" )
-    endif()
-
-    if (GPU_TARGET MATCHES sm_90)
-        if (NOT MIN_ARCH)
-            set( MIN_ARCH 900 )
-        endif()
-        list(APPEND __cuda_architectures 90)
-        message( STATUS "    compile for CUDA arch 9.0 (Hopper)" )
-    endif()
+        list( APPEND __cuda_architectures "${sm}" )
+        string( REGEX REPLACE "([0-9])([0-9])" "\\1.\\2" cuda_arch "${sm}" )
+        message( STATUS "    compile for CUDA arch ${cuda_arch}" )
+    endforeach()
 
-    if (NOT MIN_ARCH)
-        message( FATAL_ERROR "GPU_TARGET must contain one or more of Fermi, Kepler, Maxwell, Pascal, Volta, Turing, Ampere, or valid sm_[0-9][0-9]" )
+    if (NOT __cuda_architectures)
+        message( FATAL_ERROR
+                 "GPU_TARGET must contain one or more of "
+                 "Fermi, Kepler, Maxwell, Pascal, Volta, Turing, Ampere, Hopper, or valid sm_[0-9][0-9]. "
+                 "Was: ${GPU_TARGET}" )
     endif()
 
     set(CUDA_ARCHITECTURES "${__cuda_architectures}")
+    set( MIN_ARCH ${MIN_SM}0 )
 
     add_library(magma_nvcc_flags INTERFACE)
     if (COMPILER_SUPPORTS_FPIC)
@@ -310,7 +209,7 @@ if (MAGMA_ENABLE_CUDA)
             INTERFACE
             $<$<COMPILE_LANGUAGE:CUDA>:--compiler-options;${FORTRAN_CONVENTION}>
         )
-    endif(COMPILER_SUPPORTS_FPIC)
+    endif()
 
     set(MAGMA_HAVE_CUDA "1")
     set(MAGMA_CUDA_ARCH_MIN "${MIN_ARCH}")
-- 
2.47.1

